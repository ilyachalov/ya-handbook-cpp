#include <iostream>
#include <vector>

int main()
{
    // создать вектор строк
    const size_t m{ 1'000'000 };   // длина вектора строк
    const size_t n{ 1'000 };       // длина каждой строки (я уменьшил до 1'000,
                                   // так как Ubuntu через WSL у меня не тянула
                                   // миллион строк по 10'000 символов)
    std::vector<std::string> v(m); // вектор строк

    // заполнить строки вектора
    for (size_t i{}; i != m; ++i)
    {
        v[i].resize(n, '@'); // заполнить строку символами '@'
    }

    size_t sum{};

    // подсчет количества символов во всех строках вектора (версия 1)
    for (auto row: v)
    {
        sum += row.size();
    }

    // подсчет количества символов во всех строках вектора (версия 2)
    // (это эквивалент версии 1)
    // for (size_t i{}; i != v.size(); ++i)
    // {
    //     std::string row{ v[i] }; // здесь создается копия строки, для длинных
    //                              // строк это занимает много времени
    //     sum += row.size();
    // }

    // подсчет количества символов во всех строках вектора (версия 3)
    // (копирование строки заменяем на создание ссылки на строку,
    // это ускорит время работы программы)
    // for (const auto& row: v)
    // {
    //     sum += row.size();
    // }

    // вывод результата в консоль
    std::cout << sum << '\n';

    return 0;
}