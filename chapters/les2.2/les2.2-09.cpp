#include <iostream>

int main()
{
    unsigned int x{ 0 };
    unsigned int y{ x - 1 }; // Математически должно получиться -1,
                             // но тип unsigned int не может содержать
                             // отрицательные числа. Однако, компилятор
                             // не выдаст ошибку.
    unsigned int z{ y + 1 };

    std::cout << x << '\n' << y << '\n' << z << '\n';

    // Если на вашем компьютере тип unsigned int представляется 4 байтами,
    // то результат будет следующий:

    // 0
    // 4 294 967 295
    // 0

    // Тип unsigned int в 4 байтах позволяет хранить числа от 0
    // до 4 294 967 295 включительно. При расчетах числовая прямая замкнута
    // кольцом, то есть при вычитании числа из 0 расчет переходит от 0 к
    // максимальному 4 294 967 295 и далее вычитание происходит из этого
    // числа. Пример:

    // 0 - 1 = 4 294 967 295
    // 0 - 2 = 4 294 967 294
    // 0 - 3 = 4 294 967 293
    // и так далее...

    // Также в обратную сторону:

    // 4 294 967 295 + 1 = 0
    // 4 294 967 295 + 2 = 1
    // 4 294 967 295 + 3 = 2
    // и так далее...

    return 0;
}